name: Daily Commit Summary

on:
  schedule:
    # Runs at 5:00 AM and 12:00 PM UTC
    - cron: '0 5,12 * * *'
  workflow_dispatch: # Allows manual triggering for testing

jobs:
  summarize-commits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetches all history

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Check for new commits
        id: check-commits
        run: |
          # Get the date 24 hours ago at the specified time (5 AM or 12 PM)
          CURRENT_HOUR=$(date -u +%H)
          if [ $CURRENT_HOUR -eq 5 ]; then
            # If current time is 5 AM, look for commits since 12 PM yesterday
            SINCE=$(date -u -d "yesterday 12:00" +"%Y-%m-%dT12:00:00Z")
          else
            # If current time is 12 PM, look for commits since 5 AM today
            SINCE=$(date -u -d "today 05:00" +"%Y-%m-%dT05:00:00Z")
          fi

          UNTIL=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

          # Get commits since the last check
          COMMITS=$(git log --since="$SINCE" --until="$UNTIL" --pretty=format:"%h - %s (%an)" --reverse)
          COMMIT_COUNT=$(echo "$COMMITS" | grep -v "^$" | wc -l)

          # Store commit info
          echo "$COMMITS" > commits.txt
          echo "commit_count=$COMMIT_COUNT" >> $GITHUB_OUTPUT

          if [ $COMMIT_COUNT -gt 0 ]; then
            echo "has_commits=true" >> $GITHUB_OUTPUT
          else
            echo "has_commits=false" >> $GITHUB_OUTPUT
          fi

      - name: Generate AI summary
        if: steps.check-commits.outputs.has_commits == 'true'
        id: ai-summary
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # Install dependencies
          npm install axios

          # Create a temporary script
          cat > summarize.js << 'EOF'
          const axios = require('axios');
          const fs = require('fs');

          async function summarizeCommits() {
            try {
              // Read commit data
              const commitData = fs.readFileSync('commits.txt', 'utf8');

              // Call OpenAI API
              const response = await axios.post(
                'https://api.openai.com/v1/chat/completions',
                {
                  model: "gpt-4-turbo",
                  messages: [
                    {
                      role: "system",
                      content: "You are a helpful assistant that summarizes git commits. Provide a concise summary with key changes and impact. Format the summary in markdown."
                    },
                    {
                      role: "user",
                      content: `Summarize these commits in a clear, organized way:\n\n${commitData}`
                    }
                  ],
                  temperature: 0.7,
                  max_tokens: 500
                },
                {
                  headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`
                  }
                }
              );

              const summary = response.data.choices[0].message.content;
              fs.writeFileSync('summary.md', summary);
            } catch (error) {
              console.error('Error in AI summary:', error.message);
              fs.writeFileSync('summary.md', 'Failed to generate commit summary.');
              process.exit(1);
            }
          }

          summarizeCommits();
          EOF

          # Run the script
          node summarize.js

          # Prepare summary for GitHub output
          SUMMARY=$(cat summary.md)
          SUMMARY="${SUMMARY//'%'/'%25'}"
          SUMMARY="${SUMMARY//$'\n'/'%0A'}"
          SUMMARY="${SUMMARY//$'\r'/'%0D'}"
          echo "summary<<EOF" >> $GITHUB_OUTPUT
          echo "$SUMMARY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Send message to Discord
        if: steps.check-commits.outputs.has_commits == 'true'
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: "ðŸ“‹ Daily Commit Summary"
          description: |
            Found ${{ steps.check-commits.outputs.commit_count }} new commit(s) since last check.

            ${{ steps.ai-summary.outputs.summary }}
          color: 0x0099ff
          username: GitHub Actions
          avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
